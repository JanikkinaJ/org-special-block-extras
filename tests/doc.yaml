bug: |-
  
  Due to eager evaluation of glossary lookups, I need the following
  
  (setq org-export-with-broken-links t)
  
input: |-
  The ~doc~ link type can be used to show tooltips for Emacs Lisp commands such as

                           doc:thread-last
                           
  However, it can also be used for your own definitions/glossary.
  First define a term as follows, which does not render anything in the resulting HTML.

                   #+begin_documentation Category Theory :label cat
                   A theory of typed composition; e.g., typed monoids.
                   #+end_documentation

  Then you can refer to it using the given :label, if any:

                               doc:cat
    
  Or else refer to it with underscores in lieu of spaces:

                         doc:Category_Theory

  Either approach renders the name of the term, not the way its referenced.
  If you want to change what's rendered, provide a description:

                    [[doc:cat][abstract nonsense]]

  Finally, if ~doc~ gets a label that is not an Emacs Lisp command, variable, nor a user-defined
  definition via #+begin_documentation, then we try to look up its definition via the dictionary:

                            doc:happiness

expectations:
  html: |-
    <p>
      The <code>doc</code> link type can be used to show tooltips for Emacs Lisp
      commands such as
    </p>

    <p>
      <abbr
        class="tooltip"
        title="Thread FORMS elements as the last argument of their successor.<br>Example:<br>&emsp;&emsp;(thread-last<br>&emsp;&emsp;&emsp;5<br>&emsp;&emsp;&emsp;(+ 20)<br>&emsp;&emsp;&emsp;(<em> 25)<br>&emsp;&emsp;&emsp;-<br>&emsp;&emsp;&emsp;(+ 40))<br>Is equivalent to:<br>&emsp;&emsp;(+ 40 (- (</em> 25 (+ 20 5))))<br>Note how the single â€˜-â€™ got converted into a list before<br>threading.<br><br>(fn &rest FORMS)"
        >thread-last</abbr
      >
    </p>

    <p>
      However, it can also be used for your own definitions/glossary. First define a
      term as follows, which does not render anything in the resulting HTML.
    </p>

    <p>Then you can refer to it using the given :label, if any:</p>

    <p>
      <abbr
        class="tooltip"
        title="A theory of typed composition; e.g., typed monoids."
        >Category Theory</abbr
      >
    </p>

    <p>Or else refer to it with underscores in lieu of spaces:</p>

    <p>
      <abbr
        class="tooltip"
        title="A theory of typed composition; e.g., typed monoids."
        >Category Theory</abbr
      >
    </p>

    <p>
      Either approach renders the name of the term, not the way its referenced. If
      you want to change what's rendered, provide a description:
    </p>

    <p>
      <abbr
        class="tooltip"
        title="A theory of typed composition; e.g., typed monoids."
        >abstract nonsense</abbr
      >
    </p>

    <p>
      Finally, if <code>doc</code> gets a label that is not an Emacs Lisp command,
      variable, nor a user-defined definition via #+begin<sub>documentation</sub>,
      then we try to look up its definition via the dictionary:
    </p>

    <p>
      <abbr
        class="tooltip"
        title="<br>Overview of noun happiness<br><br>The noun happiness has 2 senses (first 2 from tagged texts)<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<br>1. (4) happiness, felicity -- (state of well-being characterized by emotions ranging from contentment to intense joy)<br>2. (2) happiness -- (emotions experienced when in a state of well-being)<br><br>Synonyms/Hypernyms (Ordered by Estimated Frequency) of noun happiness<br><br>2 senses of happiness&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; <br><br>Sense 1<br>happiness, felicity<br>&emsp;&emsp;&emsp; => emotional state, spirit<br><br>Sense 2<br>happiness<br>&emsp;&emsp;&emsp; => feeling<br>"
        >happiness</abbr
      >
    </p>
  latex: |-
    ðŸš« The LaTex backend is intentionally unmaintained.
    ðŸ«  Whoops, there seems to be an error: 
     (void-variable label)
